version: "2.1"
networks:
  scott-net:
services:
  app:
    #build: ./src_vue
    image: uhhlt/scott
    volumes:
      - ./src_vue/config:/app/config
      - ./src_vue/persistence:/app/persistence
      - ./src_vue/services:/app/services
      - ./src_vue/model:/app/model
      - ./src_vue/static:/app/static
    # depends_on:
    #   - elasticsearch_780
    links:
      - db
    ports:
      - "10020:80"
    networks:
      scott-net:

  db:
    image: mariadb:10.5.4
    container_name: mariadb_1054
    volumes:
      # database - this can be combined with environment [implicit start-up scrip1] to source one db [useful for very large dumps as here]
      - ${PWD}/db/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      #  Permanent volume not needed - as the data does not change
      - ${PWD}/db/dev_data:/var/lib/mysql
      # SECOND START-UP SCRIPT VIA scripts in entrypoint folder
      # all scripts in this folder are copied somewhere - thus do NOT reference other files in them - use USE db; - execution lexically
      #- ${PWD}/db/init/init_dev:/docker-entrypoint-initdb.d

    # environment works as a first start-up script and executes mysql commands on the docker image
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: scot
      MYSQL_USER: user
      MYSQL_PASSWORD: password

    networks:
      scott-net:

  elasticsearch:
    image: elasticsearch:8.6.0
    container_name: scot_elasticsearch_860
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9292:9200
      - 9393:9300
    networks:
      scott-net:
# volumes:
#   elasticsearch_data:
#     driver: local
